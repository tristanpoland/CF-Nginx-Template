worker_processes 1;
daemon off;

error_log stderr;
events { worker_connections 1024; }

http {
  charset utf-8;
  log_format cloudfoundry 'NginxLog "$request" $status $body_bytes_sent';
  access_log /dev/stdout cloudfoundry;
  default_type application/octet-stream;
  
  # Define mime types directly instead of including external file
  types {
    text/html                             html htm shtml;
    text/css                              css;
    text/xml                              xml;
    image/gif                             gif;
    image/jpeg                            jpeg jpg;
    application/javascript                js;
    application/json                      json;
    image/png                             png;
    image/svg+xml                         svg svgz;
    image/webp                            webp;
    image/x-icon                          ico;
    font/woff                             woff;
    font/woff2                            woff2;
    application/zip                       zip;
    application/pdf                       pdf;
  }
  
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 30;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT

  server {
    listen {{port}};
    root public;
    index index.html index.htm;

    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types text/plain text/css application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Custom error pages
    error_page 404 /404.html;
    location = /404.html {
      internal;
    }

    # Serve static files
    location / {
      try_files $uri $uri/ /index.html;
    }

    # Add Cache-Control headers for static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
      expires 7d;
      add_header Cache-Control "public, max-age=604800";
    }

    # Health check endpoint
    location /health {
      add_header Content-Type text/plain;
      return 200 "OK";
    }
    
    # Environment information endpoint
    location /env {
      add_header Content-Type text/html;
      return 200 "<!DOCTYPE html>
      <html>
      <head>
        <title>Environment Information</title>
        <link rel='stylesheet' href='/css/style.css'>
      </head>
      <body>
        <div class='container'>
          <div class='info-card'>
            <h2>Environment Information</h2>
            <p>Nginx Version: $nginx_version</p>
            <p>Server Port: {{port}}</p>
            <p>Host: $host</p>
            <p>Remote Address: $remote_addr</p>
          </div>
        </div>
      </body>
      </html>";
    }
  }
}